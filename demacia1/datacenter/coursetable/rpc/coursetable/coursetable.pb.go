// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: coursetable.proto

package coursetable

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrgIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId int64 `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
}

func (x *OrgIdReq) Reset() {
	*x = OrgIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coursetable_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgIdReq) ProtoMessage() {}

func (x *OrgIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_coursetable_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgIdReq.ProtoReflect.Descriptor instead.
func (*OrgIdReq) Descriptor() ([]byte, []int) {
	return file_coursetable_proto_rawDescGZIP(), []int{0}
}

func (x *OrgIdReq) GetOrgId() int64 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type CourseInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId      int64 `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	ClassId    int64 `protobuf:"varint,2,opt,name=classId,proto3" json:"classId,omitempty"`
	Weekday    int32 `protobuf:"varint,3,opt,name=weekday,proto3" json:"weekday,omitempty"`
	CourseSort int32 `protobuf:"varint,4,opt,name=courseSort,proto3" json:"courseSort,omitempty"`
}

func (x *CourseInfoReq) Reset() {
	*x = CourseInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coursetable_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseInfoReq) ProtoMessage() {}

func (x *CourseInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_coursetable_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseInfoReq.ProtoReflect.Descriptor instead.
func (*CourseInfoReq) Descriptor() ([]byte, []int) {
	return file_coursetable_proto_rawDescGZIP(), []int{1}
}

func (x *CourseInfoReq) GetOrgId() int64 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *CourseInfoReq) GetClassId() int64 {
	if x != nil {
		return x.ClassId
	}
	return 0
}

func (x *CourseInfoReq) GetWeekday() int32 {
	if x != nil {
		return x.Weekday
	}
	return 0
}

func (x *CourseInfoReq) GetCourseSort() int32 {
	if x != nil {
		return x.CourseSort
	}
	return 0
}

type CourseTableDeployResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*CourseTableDeploy `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *CourseTableDeployResp) Reset() {
	*x = CourseTableDeployResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coursetable_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseTableDeployResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseTableDeployResp) ProtoMessage() {}

func (x *CourseTableDeployResp) ProtoReflect() protoreflect.Message {
	mi := &file_coursetable_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseTableDeployResp.ProtoReflect.Descriptor instead.
func (*CourseTableDeployResp) Descriptor() ([]byte, []int) {
	return file_coursetable_proto_rawDescGZIP(), []int{2}
}

func (x *CourseTableDeployResp) GetList() []*CourseTableDeploy {
	if x != nil {
		return x.List
	}
	return nil
}

type CourseTableInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PositionName string `protobuf:"bytes,1,opt,name=positionName,proto3" json:"positionName,omitempty"`
	SubjectName  string `protobuf:"bytes,2,opt,name=subjectName,proto3" json:"subjectName,omitempty"`
	ClassName    string `protobuf:"bytes,3,opt,name=className,proto3" json:"className,omitempty"`
	TeacherName  string `protobuf:"bytes,4,opt,name=teacherName,proto3" json:"teacherName,omitempty"`
}

func (x *CourseTableInfoResp) Reset() {
	*x = CourseTableInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coursetable_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseTableInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseTableInfoResp) ProtoMessage() {}

func (x *CourseTableInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_coursetable_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseTableInfoResp.ProtoReflect.Descriptor instead.
func (*CourseTableInfoResp) Descriptor() ([]byte, []int) {
	return file_coursetable_proto_rawDescGZIP(), []int{3}
}

func (x *CourseTableInfoResp) GetPositionName() string {
	if x != nil {
		return x.PositionName
	}
	return ""
}

func (x *CourseTableInfoResp) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *CourseTableInfoResp) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *CourseTableInfoResp) GetTeacherName() string {
	if x != nil {
		return x.TeacherName
	}
	return ""
}

type CourseTableDeploy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Note       string `protobuf:"bytes,1,opt,name=note,proto3" json:"note,omitempty"`
	Weekday    int32  `protobuf:"varint,2,opt,name=weekday,proto3" json:"weekday,omitempty"`
	StartTime  string `protobuf:"bytes,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime    string `protobuf:"bytes,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Grouping   int32  `protobuf:"varint,5,opt,name=grouping,proto3" json:"grouping,omitempty"`
	CourseFlag bool   `protobuf:"varint,6,opt,name=courseFlag,proto3" json:"courseFlag,omitempty"`
	CourseSort int32  `protobuf:"varint,7,opt,name=courseSort,proto3" json:"courseSort,omitempty"`
}

func (x *CourseTableDeploy) Reset() {
	*x = CourseTableDeploy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coursetable_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseTableDeploy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseTableDeploy) ProtoMessage() {}

func (x *CourseTableDeploy) ProtoReflect() protoreflect.Message {
	mi := &file_coursetable_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseTableDeploy.ProtoReflect.Descriptor instead.
func (*CourseTableDeploy) Descriptor() ([]byte, []int) {
	return file_coursetable_proto_rawDescGZIP(), []int{4}
}

func (x *CourseTableDeploy) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *CourseTableDeploy) GetWeekday() int32 {
	if x != nil {
		return x.Weekday
	}
	return 0
}

func (x *CourseTableDeploy) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *CourseTableDeploy) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *CourseTableDeploy) GetGrouping() int32 {
	if x != nil {
		return x.Grouping
	}
	return 0
}

func (x *CourseTableDeploy) GetCourseFlag() bool {
	if x != nil {
		return x.CourseFlag
	}
	return false
}

func (x *CourseTableDeploy) GetCourseSort() int32 {
	if x != nil {
		return x.CourseSort
	}
	return 0
}

type OrgIdAndClassIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId   int64 `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	ClassId int64 `protobuf:"varint,2,opt,name=classId,proto3" json:"classId,omitempty"`
}

func (x *OrgIdAndClassIdReq) Reset() {
	*x = OrgIdAndClassIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coursetable_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgIdAndClassIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgIdAndClassIdReq) ProtoMessage() {}

func (x *OrgIdAndClassIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_coursetable_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgIdAndClassIdReq.ProtoReflect.Descriptor instead.
func (*OrgIdAndClassIdReq) Descriptor() ([]byte, []int) {
	return file_coursetable_proto_rawDescGZIP(), []int{5}
}

func (x *OrgIdAndClassIdReq) GetOrgId() int64 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *OrgIdAndClassIdReq) GetClassId() int64 {
	if x != nil {
		return x.ClassId
	}
	return 0
}

type CourseTableRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime    string `protobuf:"bytes,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	SubjectName  string `protobuf:"bytes,2,opt,name=subjectName,proto3" json:"subjectName,omitempty"`
	PositionName string `protobuf:"bytes,3,opt,name=positionName,proto3" json:"positionName,omitempty"`
	CourseNote   string `protobuf:"bytes,4,opt,name=courseNote,proto3" json:"courseNote,omitempty"`
	ClassName    string `protobuf:"bytes,5,opt,name=className,proto3" json:"className,omitempty"`
	OrgId        int64  `protobuf:"varint,6,opt,name=orgId,proto3" json:"orgId,omitempty"`
	EndTime      string `protobuf:"bytes,7,opt,name=endTime,proto3" json:"endTime,omitempty"`
	MemberId     int64  `protobuf:"varint,8,opt,name=memberId,proto3" json:"memberId,omitempty"`
	MemberName   string `protobuf:"bytes,9,opt,name=memberName,proto3" json:"memberName,omitempty"`
}

func (x *CourseTableRecord) Reset() {
	*x = CourseTableRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coursetable_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseTableRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseTableRecord) ProtoMessage() {}

func (x *CourseTableRecord) ProtoReflect() protoreflect.Message {
	mi := &file_coursetable_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseTableRecord.ProtoReflect.Descriptor instead.
func (*CourseTableRecord) Descriptor() ([]byte, []int) {
	return file_coursetable_proto_rawDescGZIP(), []int{6}
}

func (x *CourseTableRecord) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *CourseTableRecord) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *CourseTableRecord) GetPositionName() string {
	if x != nil {
		return x.PositionName
	}
	return ""
}

func (x *CourseTableRecord) GetCourseNote() string {
	if x != nil {
		return x.CourseNote
	}
	return ""
}

func (x *CourseTableRecord) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *CourseTableRecord) GetOrgId() int64 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *CourseTableRecord) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *CourseTableRecord) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *CourseTableRecord) GetMemberName() string {
	if x != nil {
		return x.MemberName
	}
	return ""
}

type CourseTableRecordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*CourseTableRecord `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *CourseTableRecordResp) Reset() {
	*x = CourseTableRecordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coursetable_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseTableRecordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseTableRecordResp) ProtoMessage() {}

func (x *CourseTableRecordResp) ProtoReflect() protoreflect.Message {
	mi := &file_coursetable_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseTableRecordResp.ProtoReflect.Descriptor instead.
func (*CourseTableRecordResp) Descriptor() ([]byte, []int) {
	return file_coursetable_proto_rawDescGZIP(), []int{7}
}

func (x *CourseTableRecordResp) GetList() []*CourseTableRecord {
	if x != nil {
		return x.List
	}
	return nil
}

type ClassIdAndMemberIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassId  int64 `protobuf:"varint,1,opt,name=ClassId,proto3" json:"ClassId,omitempty"`
	MemberId int64 `protobuf:"varint,2,opt,name=MemberId,proto3" json:"MemberId,omitempty"`
}

func (x *ClassIdAndMemberIdReq) Reset() {
	*x = ClassIdAndMemberIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coursetable_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClassIdAndMemberIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassIdAndMemberIdReq) ProtoMessage() {}

func (x *ClassIdAndMemberIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_coursetable_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassIdAndMemberIdReq.ProtoReflect.Descriptor instead.
func (*ClassIdAndMemberIdReq) Descriptor() ([]byte, []int) {
	return file_coursetable_proto_rawDescGZIP(), []int{8}
}

func (x *ClassIdAndMemberIdReq) GetClassId() int64 {
	if x != nil {
		return x.ClassId
	}
	return 0
}

func (x *ClassIdAndMemberIdReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type SuccessResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
}

func (x *SuccessResp) Reset() {
	*x = SuccessResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coursetable_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuccessResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessResp) ProtoMessage() {}

func (x *SuccessResp) ProtoReflect() protoreflect.Message {
	mi := &file_coursetable_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessResp.ProtoReflect.Descriptor instead.
func (*SuccessResp) Descriptor() ([]byte, []int) {
	return file_coursetable_proto_rawDescGZIP(), []int{9}
}

func (x *SuccessResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ClassIdAndMemberInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassId   int64  `protobuf:"varint,1,opt,name=ClassId,proto3" json:"ClassId,omitempty"`
	SubjectId int64  `protobuf:"varint,2,opt,name=SubjectId,proto3" json:"SubjectId,omitempty"`
	MemberId  int64  `protobuf:"varint,3,opt,name=MemberId,proto3" json:"MemberId,omitempty"`
	Truename  string `protobuf:"bytes,4,opt,name=Truename,proto3" json:"Truename,omitempty"`
}

func (x *ClassIdAndMemberInfoReq) Reset() {
	*x = ClassIdAndMemberInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coursetable_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClassIdAndMemberInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassIdAndMemberInfoReq) ProtoMessage() {}

func (x *ClassIdAndMemberInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_coursetable_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassIdAndMemberInfoReq.ProtoReflect.Descriptor instead.
func (*ClassIdAndMemberInfoReq) Descriptor() ([]byte, []int) {
	return file_coursetable_proto_rawDescGZIP(), []int{10}
}

func (x *ClassIdAndMemberInfoReq) GetClassId() int64 {
	if x != nil {
		return x.ClassId
	}
	return 0
}

func (x *ClassIdAndMemberInfoReq) GetSubjectId() int64 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

func (x *ClassIdAndMemberInfoReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *ClassIdAndMemberInfoReq) GetTruename() string {
	if x != nil {
		return x.Truename
	}
	return ""
}

var File_coursetable_proto protoreflect.FileDescriptor

var file_coursetable_proto_rawDesc = []byte{
	0x0a, 0x11, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x22, 0x20, 0x0a, 0x08, 0x4f, 0x72, 0x67, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x67,
	0x49, 0x64, 0x22, 0x79, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x65, 0x6b, 0x64, 0x61, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x77, 0x65, 0x65, 0x6b, 0x64, 0x61, 0x79, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x22, 0x4b, 0x0a,
	0x15, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x9b, 0x01, 0x0a, 0x13, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd5, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x65, 0x6b, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x77, 0x65, 0x65, 0x6b, 0x64, 0x61, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x46, 0x6c, 0x61, 0x67,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x6f, 0x72, 0x74,
	0x22, 0x44, 0x0a, 0x12, 0x4f, 0x72, 0x67, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x22, 0xa1, 0x02, 0x0a, 0x11, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x6f, 0x74, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4b, 0x0a, 0x15, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x15, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x49, 0x64, 0x41, 0x6e, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x27, 0x0a, 0x0b, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0x89, 0x01, 0x0a, 0x17, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x54, 0x72, 0x75, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x54, 0x72, 0x75, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0xda, 0x03, 0x0a, 0x0b,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x5c, 0x0a, 0x1f, 0x67,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x15,
	0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x4f, 0x72, 0x67,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x20, 0x67, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x79, 0x4f, 0x72, 0x67, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x2e,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5f, 0x0a, 0x18, 0x67,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x4f, 0x72, 0x67, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x13,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x55, 0x0a, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x41, 0x6e,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x18,
	0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x42, 0x0d, 0x5a, 0x0b, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_coursetable_proto_rawDescOnce sync.Once
	file_coursetable_proto_rawDescData = file_coursetable_proto_rawDesc
)

func file_coursetable_proto_rawDescGZIP() []byte {
	file_coursetable_proto_rawDescOnce.Do(func() {
		file_coursetable_proto_rawDescData = protoimpl.X.CompressGZIP(file_coursetable_proto_rawDescData)
	})
	return file_coursetable_proto_rawDescData
}

var file_coursetable_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_coursetable_proto_goTypes = []interface{}{
	(*OrgIdReq)(nil),                // 0: coursetable.OrgIdReq
	(*CourseInfoReq)(nil),           // 1: coursetable.CourseInfoReq
	(*CourseTableDeployResp)(nil),   // 2: coursetable.CourseTableDeployResp
	(*CourseTableInfoResp)(nil),     // 3: coursetable.CourseTableInfoResp
	(*CourseTableDeploy)(nil),       // 4: coursetable.CourseTableDeploy
	(*OrgIdAndClassIdReq)(nil),      // 5: coursetable.OrgIdAndClassIdReq
	(*CourseTableRecord)(nil),       // 6: coursetable.CourseTableRecord
	(*CourseTableRecordResp)(nil),   // 7: coursetable.CourseTableRecordResp
	(*ClassIdAndMemberIdReq)(nil),   // 8: coursetable.ClassIdAndMemberIdReq
	(*SuccessResp)(nil),             // 9: coursetable.SuccessResp
	(*ClassIdAndMemberInfoReq)(nil), // 10: coursetable.ClassIdAndMemberInfoReq
}
var file_coursetable_proto_depIdxs = []int32{
	4,  // 0: coursetable.CourseTableDeployResp.list:type_name -> coursetable.CourseTableDeploy
	6,  // 1: coursetable.CourseTableRecordResp.list:type_name -> coursetable.CourseTableRecord
	0,  // 2: coursetable.coursetable.getCourseTableDeployListByOrgId:input_type -> coursetable.OrgIdReq
	1,  // 3: coursetable.coursetable.getCourseTableInfoByOrgIdAndSort:input_type -> coursetable.CourseInfoReq
	5,  // 4: coursetable.coursetable.getCourseTableRecordInfo:input_type -> coursetable.OrgIdAndClassIdReq
	8,  // 5: coursetable.coursetable.removeCourseTeacher:input_type -> coursetable.ClassIdAndMemberIdReq
	10, // 6: coursetable.coursetable.updateCourseTeacher:input_type -> coursetable.ClassIdAndMemberInfoReq
	2,  // 7: coursetable.coursetable.getCourseTableDeployListByOrgId:output_type -> coursetable.CourseTableDeployResp
	3,  // 8: coursetable.coursetable.getCourseTableInfoByOrgIdAndSort:output_type -> coursetable.CourseTableInfoResp
	7,  // 9: coursetable.coursetable.getCourseTableRecordInfo:output_type -> coursetable.CourseTableRecordResp
	9,  // 10: coursetable.coursetable.removeCourseTeacher:output_type -> coursetable.SuccessResp
	9,  // 11: coursetable.coursetable.updateCourseTeacher:output_type -> coursetable.SuccessResp
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_coursetable_proto_init() }
func file_coursetable_proto_init() {
	if File_coursetable_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_coursetable_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coursetable_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coursetable_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseTableDeployResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coursetable_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseTableInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coursetable_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseTableDeploy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coursetable_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgIdAndClassIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coursetable_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseTableRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coursetable_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseTableRecordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coursetable_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClassIdAndMemberIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coursetable_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuccessResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coursetable_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClassIdAndMemberInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_coursetable_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_coursetable_proto_goTypes,
		DependencyIndexes: file_coursetable_proto_depIdxs,
		MessageInfos:      file_coursetable_proto_msgTypes,
	}.Build()
	File_coursetable_proto = out.File
	file_coursetable_proto_rawDesc = nil
	file_coursetable_proto_goTypes = nil
	file_coursetable_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CoursetableClient is the client API for Coursetable service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CoursetableClient interface {
	GetCourseTableDeployListByOrgId(ctx context.Context, in *OrgIdReq, opts ...grpc.CallOption) (*CourseTableDeployResp, error)
	GetCourseTableInfoByOrgIdAndSort(ctx context.Context, in *CourseInfoReq, opts ...grpc.CallOption) (*CourseTableInfoResp, error)
	GetCourseTableRecordInfo(ctx context.Context, in *OrgIdAndClassIdReq, opts ...grpc.CallOption) (*CourseTableRecordResp, error)
	RemoveCourseTeacher(ctx context.Context, in *ClassIdAndMemberIdReq, opts ...grpc.CallOption) (*SuccessResp, error)
	UpdateCourseTeacher(ctx context.Context, in *ClassIdAndMemberInfoReq, opts ...grpc.CallOption) (*SuccessResp, error)
}

type coursetableClient struct {
	cc grpc.ClientConnInterface
}

func NewCoursetableClient(cc grpc.ClientConnInterface) CoursetableClient {
	return &coursetableClient{cc}
}

func (c *coursetableClient) GetCourseTableDeployListByOrgId(ctx context.Context, in *OrgIdReq, opts ...grpc.CallOption) (*CourseTableDeployResp, error) {
	out := new(CourseTableDeployResp)
	err := c.cc.Invoke(ctx, "/coursetable.coursetable/getCourseTableDeployListByOrgId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coursetableClient) GetCourseTableInfoByOrgIdAndSort(ctx context.Context, in *CourseInfoReq, opts ...grpc.CallOption) (*CourseTableInfoResp, error) {
	out := new(CourseTableInfoResp)
	err := c.cc.Invoke(ctx, "/coursetable.coursetable/getCourseTableInfoByOrgIdAndSort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coursetableClient) GetCourseTableRecordInfo(ctx context.Context, in *OrgIdAndClassIdReq, opts ...grpc.CallOption) (*CourseTableRecordResp, error) {
	out := new(CourseTableRecordResp)
	err := c.cc.Invoke(ctx, "/coursetable.coursetable/getCourseTableRecordInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coursetableClient) RemoveCourseTeacher(ctx context.Context, in *ClassIdAndMemberIdReq, opts ...grpc.CallOption) (*SuccessResp, error) {
	out := new(SuccessResp)
	err := c.cc.Invoke(ctx, "/coursetable.coursetable/removeCourseTeacher", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coursetableClient) UpdateCourseTeacher(ctx context.Context, in *ClassIdAndMemberInfoReq, opts ...grpc.CallOption) (*SuccessResp, error) {
	out := new(SuccessResp)
	err := c.cc.Invoke(ctx, "/coursetable.coursetable/updateCourseTeacher", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CoursetableServer is the server API for Coursetable service.
type CoursetableServer interface {
	GetCourseTableDeployListByOrgId(context.Context, *OrgIdReq) (*CourseTableDeployResp, error)
	GetCourseTableInfoByOrgIdAndSort(context.Context, *CourseInfoReq) (*CourseTableInfoResp, error)
	GetCourseTableRecordInfo(context.Context, *OrgIdAndClassIdReq) (*CourseTableRecordResp, error)
	RemoveCourseTeacher(context.Context, *ClassIdAndMemberIdReq) (*SuccessResp, error)
	UpdateCourseTeacher(context.Context, *ClassIdAndMemberInfoReq) (*SuccessResp, error)
}

// UnimplementedCoursetableServer can be embedded to have forward compatible implementations.
type UnimplementedCoursetableServer struct {
}

func (*UnimplementedCoursetableServer) GetCourseTableDeployListByOrgId(context.Context, *OrgIdReq) (*CourseTableDeployResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCourseTableDeployListByOrgId not implemented")
}
func (*UnimplementedCoursetableServer) GetCourseTableInfoByOrgIdAndSort(context.Context, *CourseInfoReq) (*CourseTableInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCourseTableInfoByOrgIdAndSort not implemented")
}
func (*UnimplementedCoursetableServer) GetCourseTableRecordInfo(context.Context, *OrgIdAndClassIdReq) (*CourseTableRecordResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCourseTableRecordInfo not implemented")
}
func (*UnimplementedCoursetableServer) RemoveCourseTeacher(context.Context, *ClassIdAndMemberIdReq) (*SuccessResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveCourseTeacher not implemented")
}
func (*UnimplementedCoursetableServer) UpdateCourseTeacher(context.Context, *ClassIdAndMemberInfoReq) (*SuccessResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCourseTeacher not implemented")
}

func RegisterCoursetableServer(s *grpc.Server, srv CoursetableServer) {
	s.RegisterService(&_Coursetable_serviceDesc, srv)
}

func _Coursetable_GetCourseTableDeployListByOrgId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrgIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoursetableServer).GetCourseTableDeployListByOrgId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coursetable.coursetable/GetCourseTableDeployListByOrgId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoursetableServer).GetCourseTableDeployListByOrgId(ctx, req.(*OrgIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coursetable_GetCourseTableInfoByOrgIdAndSort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CourseInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoursetableServer).GetCourseTableInfoByOrgIdAndSort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coursetable.coursetable/GetCourseTableInfoByOrgIdAndSort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoursetableServer).GetCourseTableInfoByOrgIdAndSort(ctx, req.(*CourseInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coursetable_GetCourseTableRecordInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrgIdAndClassIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoursetableServer).GetCourseTableRecordInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coursetable.coursetable/GetCourseTableRecordInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoursetableServer).GetCourseTableRecordInfo(ctx, req.(*OrgIdAndClassIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coursetable_RemoveCourseTeacher_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClassIdAndMemberIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoursetableServer).RemoveCourseTeacher(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coursetable.coursetable/RemoveCourseTeacher",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoursetableServer).RemoveCourseTeacher(ctx, req.(*ClassIdAndMemberIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coursetable_UpdateCourseTeacher_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClassIdAndMemberInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoursetableServer).UpdateCourseTeacher(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coursetable.coursetable/UpdateCourseTeacher",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoursetableServer).UpdateCourseTeacher(ctx, req.(*ClassIdAndMemberInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Coursetable_serviceDesc = grpc.ServiceDesc{
	ServiceName: "coursetable.coursetable",
	HandlerType: (*CoursetableServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getCourseTableDeployListByOrgId",
			Handler:    _Coursetable_GetCourseTableDeployListByOrgId_Handler,
		},
		{
			MethodName: "getCourseTableInfoByOrgIdAndSort",
			Handler:    _Coursetable_GetCourseTableInfoByOrgIdAndSort_Handler,
		},
		{
			MethodName: "getCourseTableRecordInfo",
			Handler:    _Coursetable_GetCourseTableRecordInfo_Handler,
		},
		{
			MethodName: "removeCourseTeacher",
			Handler:    _Coursetable_RemoveCourseTeacher_Handler,
		},
		{
			MethodName: "updateCourseTeacher",
			Handler:    _Coursetable_UpdateCourseTeacher_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "coursetable.proto",
}
