// Code generated by goctl. DO NOT EDIT!
// Source: student.proto

package studentclient

import (
	"context"

	"demacia/datacenter/student/rpc/student"

	"gitlab.u-jy.cn/xiaoyang/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	IdRequest       = student.IdRequest
	StudentResponse = student.StudentResponse
	UserNameRequest = student.UserNameRequest

	Student interface {
		FindOneById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*StudentResponse, error)
		FindOneByUserName(ctx context.Context, in *UserNameRequest, opts ...grpc.CallOption) (*StudentResponse, error)
	}

	defaultStudent struct {
		cli zrpc.Client
	}
)

func NewStudent(cli zrpc.Client) Student {
	return &defaultStudent{
		cli: cli,
	}
}

func (m *defaultStudent) FindOneById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*StudentResponse, error) {
	client := student.NewStudentClient(m.cli.Conn())
	return client.FindOneById(ctx, in, opts...)
}

func (m *defaultStudent) FindOneByUserName(ctx context.Context, in *UserNameRequest, opts ...grpc.CallOption) (*StudentResponse, error) {
	client := student.NewStudentClient(m.cli.Conn())
	return client.FindOneByUserName(ctx, in, opts...)
}
