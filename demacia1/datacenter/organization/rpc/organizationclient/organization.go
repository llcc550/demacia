// Code generated by goctl. DO NOT EDIT!
// Source: organization.proto

package organizationclient

import (
	"context"

	"demacia/datacenter/organization/rpc/organization"

	"gitlab.u-jy.cn/xiaoyang/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	IdReply = organization.IdReply
	OrgInfo = organization.OrgInfo

	Organization interface {
		FindOne(ctx context.Context, in *IdReply, opts ...grpc.CallOption) (*OrgInfo, error)
	}

	defaultOrganization struct {
		cli zrpc.Client
	}
)

func NewOrganization(cli zrpc.Client) Organization {
	return &defaultOrganization{
		cli: cli,
	}
}

func (m *defaultOrganization) FindOne(ctx context.Context, in *IdReply, opts ...grpc.CallOption) (*OrgInfo, error) {
	client := organization.NewOrganizationClient(m.cli.Conn())
	return client.FindOne(ctx, in, opts...)
}
