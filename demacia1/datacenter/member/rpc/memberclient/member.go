// Code generated by goctl. DO NOT EDIT!
// Source: member.proto

package memberclient

import (
	"context"

	"demacia/datacenter/member/rpc/member"

	"gitlab.u-jy.cn/xiaoyang/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	IdReq       = member.IdReq
	InsertReq   = member.InsertReq
	MemberInfo  = member.MemberInfo
	NullResp    = member.NullResp
	UserNameReq = member.UserNameReq

	Member interface {
		FindOneById(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*MemberInfo, error)
		FindOneByUserName(ctx context.Context, in *UserNameReq, opts ...grpc.CallOption) (*MemberInfo, error)
		Insert(ctx context.Context, in *InsertReq, opts ...grpc.CallOption) (*IdReq, error)
		DeleteById(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*NullResp, error)
	}

	defaultMember struct {
		cli zrpc.Client
	}
)

func NewMember(cli zrpc.Client) Member {
	return &defaultMember{
		cli: cli,
	}
}

func (m *defaultMember) FindOneById(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*MemberInfo, error) {
	client := member.NewMemberClient(m.cli.Conn())
	return client.FindOneById(ctx, in, opts...)
}

func (m *defaultMember) FindOneByUserName(ctx context.Context, in *UserNameReq, opts ...grpc.CallOption) (*MemberInfo, error) {
	client := member.NewMemberClient(m.cli.Conn())
	return client.FindOneByUserName(ctx, in, opts...)
}

func (m *defaultMember) Insert(ctx context.Context, in *InsertReq, opts ...grpc.CallOption) (*IdReq, error) {
	client := member.NewMemberClient(m.cli.Conn())
	return client.Insert(ctx, in, opts...)
}

func (m *defaultMember) DeleteById(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*NullResp, error) {
	client := member.NewMemberClient(m.cli.Conn())
	return client.DeleteById(ctx, in, opts...)
}
