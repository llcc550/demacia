// Code generated by goctl. DO NOT EDIT!
// Source: card.proto

package cardclient

import (
	"context"

	"demacia/datacenter/card/rpc/card"

	"gitlab.u-jy.cn/xiaoyang/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddReq   = card.AddReq
	BoolResp = card.BoolResp
	CheckReq = card.CheckReq
	ListReq  = card.ListReq
	ListResp = card.ListResp

	Card interface {
		AddTeacherCard(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*BoolResp, error)
		AddStudentCard(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*BoolResp, error)
		GetTeacherCardList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error)
		GetStudentCardList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error)
		CheckMember(ctx context.Context, in *CheckReq, opts ...grpc.CallOption) (*BoolResp, error)
		CheckStudent(ctx context.Context, in *CheckReq, opts ...grpc.CallOption) (*BoolResp, error)
	}

	defaultCard struct {
		cli zrpc.Client
	}
)

func NewCard(cli zrpc.Client) Card {
	return &defaultCard{
		cli: cli,
	}
}

func (m *defaultCard) AddTeacherCard(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*BoolResp, error) {
	client := card.NewCardClient(m.cli.Conn())
	return client.AddTeacherCard(ctx, in, opts...)
}

func (m *defaultCard) AddStudentCard(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*BoolResp, error) {
	client := card.NewCardClient(m.cli.Conn())
	return client.AddStudentCard(ctx, in, opts...)
}

func (m *defaultCard) GetTeacherCardList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error) {
	client := card.NewCardClient(m.cli.Conn())
	return client.GetTeacherCardList(ctx, in, opts...)
}

func (m *defaultCard) GetStudentCardList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error) {
	client := card.NewCardClient(m.cli.Conn())
	return client.GetStudentCardList(ctx, in, opts...)
}

func (m *defaultCard) CheckMember(ctx context.Context, in *CheckReq, opts ...grpc.CallOption) (*BoolResp, error) {
	client := card.NewCardClient(m.cli.Conn())
	return client.CheckMember(ctx, in, opts...)
}

func (m *defaultCard) CheckStudent(ctx context.Context, in *CheckReq, opts ...grpc.CallOption) (*BoolResp, error) {
	client := card.NewCardClient(m.cli.Conn())
	return client.CheckStudent(ctx, in, opts...)
}
