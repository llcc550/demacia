// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: card.proto

package card

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId    int64    `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	ObjectId int64    `protobuf:"varint,2,opt,name=objectId,proto3" json:"objectId,omitempty"`
	CardNum  []string `protobuf:"bytes,3,rep,name=cardNum,proto3" json:"cardNum,omitempty"`
}

func (x *AddReq) Reset() {
	*x = AddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReq) ProtoMessage() {}

func (x *AddReq) ProtoReflect() protoreflect.Message {
	mi := &file_card_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReq.ProtoReflect.Descriptor instead.
func (*AddReq) Descriptor() ([]byte, []int) {
	return file_card_proto_rawDescGZIP(), []int{0}
}

func (x *AddReq) GetOrgId() int64 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *AddReq) GetObjectId() int64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

func (x *AddReq) GetCardNum() []string {
	if x != nil {
		return x.CardNum
	}
	return nil
}

type ListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId    int64 `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	ObjectId int64 `protobuf:"varint,2,opt,name=objectId,proto3" json:"objectId,omitempty"`
}

func (x *ListReq) Reset() {
	*x = ListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReq) ProtoMessage() {}

func (x *ListReq) ProtoReflect() protoreflect.Message {
	mi := &file_card_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReq.ProtoReflect.Descriptor instead.
func (*ListReq) Descriptor() ([]byte, []int) {
	return file_card_proto_rawDescGZIP(), []int{1}
}

func (x *ListReq) GetOrgId() int64 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *ListReq) GetObjectId() int64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

type ListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardNum []string `protobuf:"bytes,1,rep,name=cardNum,proto3" json:"cardNum,omitempty"`
}

func (x *ListResp) Reset() {
	*x = ListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResp) ProtoMessage() {}

func (x *ListResp) ProtoReflect() protoreflect.Message {
	mi := &file_card_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResp.ProtoReflect.Descriptor instead.
func (*ListResp) Descriptor() ([]byte, []int) {
	return file_card_proto_rawDescGZIP(), []int{2}
}

func (x *ListResp) GetCardNum() []string {
	if x != nil {
		return x.CardNum
	}
	return nil
}

type CheckReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId    int64  `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	ObjectId int64  `protobuf:"varint,2,opt,name=objectId,proto3" json:"objectId,omitempty"`
	CardNum  string `protobuf:"bytes,3,opt,name=cardNum,proto3" json:"cardNum,omitempty"`
}

func (x *CheckReq) Reset() {
	*x = CheckReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckReq) ProtoMessage() {}

func (x *CheckReq) ProtoReflect() protoreflect.Message {
	mi := &file_card_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckReq.ProtoReflect.Descriptor instead.
func (*CheckReq) Descriptor() ([]byte, []int) {
	return file_card_proto_rawDescGZIP(), []int{3}
}

func (x *CheckReq) GetOrgId() int64 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *CheckReq) GetObjectId() int64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

func (x *CheckReq) GetCardNum() string {
	if x != nil {
		return x.CardNum
	}
	return ""
}

type BoolResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=Result,proto3" json:"Result,omitempty"` // true：可用，false：不可用
}

func (x *BoolResp) Reset() {
	*x = BoolResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoolResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoolResp) ProtoMessage() {}

func (x *BoolResp) ProtoReflect() protoreflect.Message {
	mi := &file_card_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoolResp.ProtoReflect.Descriptor instead.
func (*BoolResp) Descriptor() ([]byte, []int) {
	return file_card_proto_rawDescGZIP(), []int{4}
}

func (x *BoolResp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_card_proto protoreflect.FileDescriptor

var file_card_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x61,
	0x72, 0x64, 0x22, 0x54, 0x0a, 0x06, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x67,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x22, 0x3b, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x24, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x22, 0x56, 0x0a, 0x08, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x72,
	0x64, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x64,
	0x4e, 0x75, 0x6d, 0x22, 0x22, 0x0a, 0x08, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xaf, 0x02, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64,
	0x12, 0x2e, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x0c, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x0e, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2e, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x0c, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x0e, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x33, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x43, 0x61,
	0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0d, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0d, 0x2e, 0x63, 0x61,
	0x72, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x63, 0x61, 0x72,
	0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x0b, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0e, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0c, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x63, 0x61, 0x72,
	0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_card_proto_rawDescOnce sync.Once
	file_card_proto_rawDescData = file_card_proto_rawDesc
)

func file_card_proto_rawDescGZIP() []byte {
	file_card_proto_rawDescOnce.Do(func() {
		file_card_proto_rawDescData = protoimpl.X.CompressGZIP(file_card_proto_rawDescData)
	})
	return file_card_proto_rawDescData
}

var file_card_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_card_proto_goTypes = []interface{}{
	(*AddReq)(nil),   // 0: card.AddReq
	(*ListReq)(nil),  // 1: card.ListReq
	(*ListResp)(nil), // 2: card.ListResp
	(*CheckReq)(nil), // 3: card.CheckReq
	(*BoolResp)(nil), // 4: card.BoolResp
}
var file_card_proto_depIdxs = []int32{
	0, // 0: card.card.addTeacherCard:input_type -> card.AddReq
	0, // 1: card.card.addStudentCard:input_type -> card.AddReq
	1, // 2: card.card.getTeacherCardList:input_type -> card.ListReq
	1, // 3: card.card.getStudentCardList:input_type -> card.ListReq
	3, // 4: card.card.checkMember:input_type -> card.CheckReq
	3, // 5: card.card.checkStudent:input_type -> card.CheckReq
	4, // 6: card.card.addTeacherCard:output_type -> card.BoolResp
	4, // 7: card.card.addStudentCard:output_type -> card.BoolResp
	2, // 8: card.card.getTeacherCardList:output_type -> card.ListResp
	2, // 9: card.card.getStudentCardList:output_type -> card.ListResp
	4, // 10: card.card.checkMember:output_type -> card.BoolResp
	4, // 11: card.card.checkStudent:output_type -> card.BoolResp
	6, // [6:12] is the sub-list for method output_type
	0, // [0:6] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_card_proto_init() }
func file_card_proto_init() {
	if File_card_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_card_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoolResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_card_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_card_proto_goTypes,
		DependencyIndexes: file_card_proto_depIdxs,
		MessageInfos:      file_card_proto_msgTypes,
	}.Build()
	File_card_proto = out.File
	file_card_proto_rawDesc = nil
	file_card_proto_goTypes = nil
	file_card_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CardClient is the client API for Card service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CardClient interface {
	AddTeacherCard(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*BoolResp, error)
	AddStudentCard(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*BoolResp, error)
	GetTeacherCardList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error)
	GetStudentCardList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error)
	CheckMember(ctx context.Context, in *CheckReq, opts ...grpc.CallOption) (*BoolResp, error)
	CheckStudent(ctx context.Context, in *CheckReq, opts ...grpc.CallOption) (*BoolResp, error)
}

type cardClient struct {
	cc grpc.ClientConnInterface
}

func NewCardClient(cc grpc.ClientConnInterface) CardClient {
	return &cardClient{cc}
}

func (c *cardClient) AddTeacherCard(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*BoolResp, error) {
	out := new(BoolResp)
	err := c.cc.Invoke(ctx, "/card.card/addTeacherCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardClient) AddStudentCard(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*BoolResp, error) {
	out := new(BoolResp)
	err := c.cc.Invoke(ctx, "/card.card/addStudentCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardClient) GetTeacherCardList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error) {
	out := new(ListResp)
	err := c.cc.Invoke(ctx, "/card.card/getTeacherCardList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardClient) GetStudentCardList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error) {
	out := new(ListResp)
	err := c.cc.Invoke(ctx, "/card.card/getStudentCardList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardClient) CheckMember(ctx context.Context, in *CheckReq, opts ...grpc.CallOption) (*BoolResp, error) {
	out := new(BoolResp)
	err := c.cc.Invoke(ctx, "/card.card/checkMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardClient) CheckStudent(ctx context.Context, in *CheckReq, opts ...grpc.CallOption) (*BoolResp, error) {
	out := new(BoolResp)
	err := c.cc.Invoke(ctx, "/card.card/checkStudent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CardServer is the server API for Card service.
type CardServer interface {
	AddTeacherCard(context.Context, *AddReq) (*BoolResp, error)
	AddStudentCard(context.Context, *AddReq) (*BoolResp, error)
	GetTeacherCardList(context.Context, *ListReq) (*ListResp, error)
	GetStudentCardList(context.Context, *ListReq) (*ListResp, error)
	CheckMember(context.Context, *CheckReq) (*BoolResp, error)
	CheckStudent(context.Context, *CheckReq) (*BoolResp, error)
}

// UnimplementedCardServer can be embedded to have forward compatible implementations.
type UnimplementedCardServer struct {
}

func (*UnimplementedCardServer) AddTeacherCard(context.Context, *AddReq) (*BoolResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddTeacherCard not implemented")
}
func (*UnimplementedCardServer) AddStudentCard(context.Context, *AddReq) (*BoolResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddStudentCard not implemented")
}
func (*UnimplementedCardServer) GetTeacherCardList(context.Context, *ListReq) (*ListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTeacherCardList not implemented")
}
func (*UnimplementedCardServer) GetStudentCardList(context.Context, *ListReq) (*ListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStudentCardList not implemented")
}
func (*UnimplementedCardServer) CheckMember(context.Context, *CheckReq) (*BoolResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckMember not implemented")
}
func (*UnimplementedCardServer) CheckStudent(context.Context, *CheckReq) (*BoolResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckStudent not implemented")
}

func RegisterCardServer(s *grpc.Server, srv CardServer) {
	s.RegisterService(&_Card_serviceDesc, srv)
}

func _Card_AddTeacherCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardServer).AddTeacherCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/card.card/AddTeacherCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardServer).AddTeacherCard(ctx, req.(*AddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Card_AddStudentCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardServer).AddStudentCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/card.card/AddStudentCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardServer).AddStudentCard(ctx, req.(*AddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Card_GetTeacherCardList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardServer).GetTeacherCardList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/card.card/GetTeacherCardList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardServer).GetTeacherCardList(ctx, req.(*ListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Card_GetStudentCardList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardServer).GetStudentCardList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/card.card/GetStudentCardList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardServer).GetStudentCardList(ctx, req.(*ListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Card_CheckMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardServer).CheckMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/card.card/CheckMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardServer).CheckMember(ctx, req.(*CheckReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Card_CheckStudent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardServer).CheckStudent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/card.card/CheckStudent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardServer).CheckStudent(ctx, req.(*CheckReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Card_serviceDesc = grpc.ServiceDesc{
	ServiceName: "card.card",
	HandlerType: (*CardServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "addTeacherCard",
			Handler:    _Card_AddTeacherCard_Handler,
		},
		{
			MethodName: "addStudentCard",
			Handler:    _Card_AddStudentCard_Handler,
		},
		{
			MethodName: "getTeacherCardList",
			Handler:    _Card_GetTeacherCardList_Handler,
		},
		{
			MethodName: "getStudentCardList",
			Handler:    _Card_GetStudentCardList_Handler,
		},
		{
			MethodName: "checkMember",
			Handler:    _Card_CheckMember_Handler,
		},
		{
			MethodName: "checkStudent",
			Handler:    _Card_CheckStudent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "card.proto",
}
