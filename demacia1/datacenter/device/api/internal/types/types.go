// Code generated by goctl. DO NOT EDIT.
package types

type UpdateTitleReq struct {
	DeviceId    int64  `json:"device_id"`
	DeviceTitle string `json:"device_title"`
}

type InsertReq struct {
	DeviceTitle string `json:"device_title"`
	Sn          string `json:"sn"`
	OrgId       int64  `json:"org_id"`
}

type DeviceIdReq struct {
	DeviceId int64 `json:"device_id"`
}

type DeviceDetail struct {
	DeviceId    int64   `json:"device_id"`
	DeviceTitle string  `json:"device_title"`
	Sn          string  `json:"sn"`
	Group       []Group `json:"group,omitempty"`
	Network     int8    `json:"network"`
}

type Group struct {
	GroupId   int64  `json:"group_id"`
	GroupName string `json:"group_name"`
}

type ListReq struct {
	DeviceTitle string `json:"device_title,optional"`
	Sn          string `json:"sn,optional"`
	GroupId     int64  `json:"group_id,optional"`
	Network     int8   `json:"network,optional"`
	Page        int    `json:"page"`
	Limit       int    `json:"limit"`
}

type ListResponse struct {
	List  []DeviceDetail `json:"list"`
	Count int            `json:"count"`
}

type GroupInsertReq struct {
	GroupName string `json:"group_name"`
}

type GroupIdReq struct {
	GroupId int64 `json:"group_id"`
}

type GroupDetail struct {
	GroupId   int64          `json:"group_id"`
	GroupName string         `json:"group_name"`
	Device    []DeviceDetail `json:"device"`
}

type AddDeviceReq struct {
	GroupId   int64   `json:"group_id"`
	DeviceIds []int64 `json:"device_ids"`
}

type GroupListReq struct {
	GroupName string `json:"group_name"`
}

type GroupList struct {
	List []GroupDetail `json:"list"`
}

type Selector struct {
	List []*DeviceGroup `json:"list"`
}

type DeviceGroup struct {
	Id       int64       `json:"id"`
	Name     string      `json:"name"`
	Children []*Children `json:"children"`
}

type Children struct {
	Id   int64  `json:"id"`
	Name string `json:"name"`
	Pid  int64  `json:"pid"`
}
