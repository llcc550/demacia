// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	"demacia/datacenter/device/api/internal/svc"

	"gitlab.u-jy.cn/xiaoyang/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/device/update-title",
				Handler: updateTitleHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/device/insert",
				Handler: insertHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/device/delete",
				Handler: deleteDeviceHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/device/detail",
				Handler: detailHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/device/list",
				Handler: listHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/device/group/insert",
				Handler: groupInsertHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/device/group/detail",
				Handler: groupDetailHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/device/group/add-device",
				Handler: addDeviceHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/device/group/update",
				Handler: groupUpdateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/device/group/delete",
				Handler: groupDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/device/group/list",
				Handler: groupListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/device/group/selector",
				Handler: selectorHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)
}
