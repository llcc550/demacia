// Code generated by goctl. DO NOT EDIT!
// Source: device.proto

package deviceclient

import (
	"context"

	"demacia/datacenter/device/rpc/device"

	"gitlab.u-jy.cn/xiaoyang/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DeviceInfo = device.DeviceInfo
	IdReq      = device.IdReq

	Device interface {
		GetDeviceInfoById(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*DeviceInfo, error)
	}

	defaultDevice struct {
		cli zrpc.Client
	}
)

func NewDevice(cli zrpc.Client) Device {
	return &defaultDevice{
		cli: cli,
	}
}

func (m *defaultDevice) GetDeviceInfoById(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*DeviceInfo, error) {
	client := device.NewDeviceClient(m.cli.Conn())
	return client.GetDeviceInfoById(ctx, in, opts...)
}
