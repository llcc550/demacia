// Code generated by goctl. DO NOT EDIT!
// Source: class.proto

package server

import (
	"context"

	"demacia/datacenter/class/rpc/class"
	"demacia/datacenter/class/rpc/internal/logic"
	"demacia/datacenter/class/rpc/internal/svc"
)

type ClassServer struct {
	svcCtx *svc.ServiceContext
}

func NewClassServer(svcCtx *svc.ServiceContext) *ClassServer {
	return &ClassServer{
		svcCtx: svcCtx,
	}
}

//  获取班级信息详情
func (s *ClassServer) GetClassInfoById(ctx context.Context, in *class.IdReq) (*class.ClassInfo, error) {
	l := logic.NewGetClassInfoByIdLogic(ctx, s.svcCtx)
	return l.GetClassInfoById(in)
}

//  根据班级名称获取班级信息
func (s *ClassServer) GetClassInfoByFullName(ctx context.Context, in *class.FullNameReq) (*class.ClassInfo, error) {
	l := logic.NewGetClassInfoByFullNameLogic(ctx, s.svcCtx)
	return l.GetClassInfoByFullName(in)
}

//  获取机构下的班级列表
func (s *ClassServer) ListByOrgId(ctx context.Context, in *class.OrgIdReq) (*class.ListByOrgIdResp, error) {
	l := logic.NewListByOrgIdLogic(ctx, s.svcCtx)
	return l.ListByOrgId(in)
}

//  获取机构下的学段列表
func (s *ClassServer) ListGradeByOrgId(ctx context.Context, in *class.OrgIdReq) (*class.ListGradeResp, error) {
	l := logic.NewListGradeByOrgIdLogic(ctx, s.svcCtx)
	return l.ListGradeByOrgId(in)
}

//  获取学段列表
func (s *ClassServer) ListGradesWithId(ctx context.Context, in *class.IdsReq) (*class.ListGradeResp, error) {
	l := logic.NewListGradesWithIdLogic(ctx, s.svcCtx)
	return l.ListGradesWithId(in)
}

//  获取学段信息
func (s *ClassServer) FindGradeById(ctx context.Context, in *class.IdReq) (*class.GradeInfo, error) {
	l := logic.NewFindGradeByIdLogic(ctx, s.svcCtx)
	return l.FindGradeById(in)
}

//  改变班级人数
func (s *ClassServer) ChangeStudentNum(ctx context.Context, in *class.StudentNumReq) (*class.NullResp, error) {
	l := logic.NewChangeStudentNumLogic(ctx, s.svcCtx)
	return l.ChangeStudentNum(in)
}

//  根据班级Id,学科Id获取任课关系
func (s *ClassServer) GetTeacherByClassIdAndSubjectId(ctx context.Context, in *class.ClassSubjectIdReq) (*class.ClassSubjectTeachInfoResp, error) {
	l := logic.NewGetTeacherByClassIdAndSubjectIdLogic(ctx, s.svcCtx)
	return l.GetTeacherByClassIdAndSubjectId(in)
}
