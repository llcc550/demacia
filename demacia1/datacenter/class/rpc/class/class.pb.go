// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.18.0
// source: class.proto

package class

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type IdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IdReq) Reset() {
	*x = IdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_class_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdReq) ProtoMessage() {}

func (x *IdReq) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdReq.ProtoReflect.Descriptor instead.
func (*IdReq) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{0}
}

func (x *IdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type IdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []int64 `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
}

func (x *IdsReq) Reset() {
	*x = IdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_class_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdsReq) ProtoMessage() {}

func (x *IdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdsReq.ProtoReflect.Descriptor instead.
func (*IdsReq) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{1}
}

func (x *IdsReq) GetId() []int64 {
	if x != nil {
		return x.Id
	}
	return nil
}

type ClassSubjectIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassId   int64 `protobuf:"varint,1,opt,name=classId,proto3" json:"classId,omitempty"`
	SubjectId int64 `protobuf:"varint,2,opt,name=subjectId,proto3" json:"subjectId,omitempty"`
}

func (x *ClassSubjectIdReq) Reset() {
	*x = ClassSubjectIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_class_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClassSubjectIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassSubjectIdReq) ProtoMessage() {}

func (x *ClassSubjectIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassSubjectIdReq.ProtoReflect.Descriptor instead.
func (*ClassSubjectIdReq) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{2}
}

func (x *ClassSubjectIdReq) GetClassId() int64 {
	if x != nil {
		return x.ClassId
	}
	return 0
}

func (x *ClassSubjectIdReq) GetSubjectId() int64 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

type FullNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId    int64  `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	FullName string `protobuf:"bytes,2,opt,name=fullName,proto3" json:"fullName,omitempty"`
}

func (x *FullNameReq) Reset() {
	*x = FullNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_class_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullNameReq) ProtoMessage() {}

func (x *FullNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullNameReq.ProtoReflect.Descriptor instead.
func (*FullNameReq) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{3}
}

func (x *FullNameReq) GetOrgId() int64 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *FullNameReq) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

type ClassSubjectTeachInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassId      int64  `protobuf:"varint,1,opt,name=classId,proto3" json:"classId,omitempty"`
	SubjectId    int64  `protobuf:"varint,2,opt,name=subjectId,proto3" json:"subjectId,omitempty"`
	SubjectTitle string `protobuf:"bytes,3,opt,name=subjectTitle,proto3" json:"subjectTitle,omitempty"`
	MemberId     int64  `protobuf:"varint,4,opt,name=memberId,proto3" json:"memberId,omitempty"`
	TrueName     string `protobuf:"bytes,5,opt,name=trueName,proto3" json:"trueName,omitempty"`
}

func (x *ClassSubjectTeachInfoResp) Reset() {
	*x = ClassSubjectTeachInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_class_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClassSubjectTeachInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassSubjectTeachInfoResp) ProtoMessage() {}

func (x *ClassSubjectTeachInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassSubjectTeachInfoResp.ProtoReflect.Descriptor instead.
func (*ClassSubjectTeachInfoResp) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{4}
}

func (x *ClassSubjectTeachInfoResp) GetClassId() int64 {
	if x != nil {
		return x.ClassId
	}
	return 0
}

func (x *ClassSubjectTeachInfoResp) GetSubjectId() int64 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

func (x *ClassSubjectTeachInfoResp) GetSubjectTitle() string {
	if x != nil {
		return x.SubjectTitle
	}
	return ""
}

func (x *ClassSubjectTeachInfoResp) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *ClassSubjectTeachInfoResp) GetTrueName() string {
	if x != nil {
		return x.TrueName
	}
	return ""
}

type ClassInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StageId  int64  `protobuf:"varint,2,opt,name=stageId,proto3" json:"stageId,omitempty"`
	GradeId  int64  `protobuf:"varint,3,opt,name=gradeId,proto3" json:"gradeId,omitempty"`
	FullName string `protobuf:"bytes,4,opt,name=fullName,proto3" json:"fullName,omitempty"`
	OrgId    int64  `protobuf:"varint,5,opt,name=orgId,proto3" json:"orgId,omitempty"`
}

func (x *ClassInfo) Reset() {
	*x = ClassInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_class_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClassInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassInfo) ProtoMessage() {}

func (x *ClassInfo) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassInfo.ProtoReflect.Descriptor instead.
func (*ClassInfo) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{5}
}

func (x *ClassInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ClassInfo) GetStageId() int64 {
	if x != nil {
		return x.StageId
	}
	return 0
}

func (x *ClassInfo) GetGradeId() int64 {
	if x != nil {
		return x.GradeId
	}
	return 0
}

func (x *ClassInfo) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *ClassInfo) GetOrgId() int64 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type GradeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *GradeInfo) Reset() {
	*x = GradeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_class_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GradeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GradeInfo) ProtoMessage() {}

func (x *GradeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GradeInfo.ProtoReflect.Descriptor instead.
func (*GradeInfo) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{6}
}

func (x *GradeInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GradeInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type ListGradeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GradeInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListGradeResp) Reset() {
	*x = ListGradeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_class_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGradeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGradeResp) ProtoMessage() {}

func (x *ListGradeResp) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGradeResp.ProtoReflect.Descriptor instead.
func (*ListGradeResp) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{7}
}

func (x *ListGradeResp) GetList() []*GradeInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type OrgIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId int64 `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
}

func (x *OrgIdReq) Reset() {
	*x = OrgIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_class_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgIdReq) ProtoMessage() {}

func (x *OrgIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgIdReq.ProtoReflect.Descriptor instead.
func (*OrgIdReq) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{8}
}

func (x *OrgIdReq) GetOrgId() int64 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type ListByOrgIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ClassInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListByOrgIdResp) Reset() {
	*x = ListByOrgIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_class_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListByOrgIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListByOrgIdResp) ProtoMessage() {}

func (x *ListByOrgIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListByOrgIdResp.ProtoReflect.Descriptor instead.
func (*ListByOrgIdResp) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{9}
}

func (x *ListByOrgIdResp) GetList() []*ClassInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type StudentNumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassId    int64 `protobuf:"varint,1,opt,name=classId,proto3" json:"classId,omitempty"`
	StudentNum int64 `protobuf:"varint,2,opt,name=studentNum,proto3" json:"studentNum,omitempty"`
}

func (x *StudentNumReq) Reset() {
	*x = StudentNumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_class_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentNumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentNumReq) ProtoMessage() {}

func (x *StudentNumReq) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentNumReq.ProtoReflect.Descriptor instead.
func (*StudentNumReq) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{10}
}

func (x *StudentNumReq) GetClassId() int64 {
	if x != nil {
		return x.ClassId
	}
	return 0
}

func (x *StudentNumReq) GetStudentNum() int64 {
	if x != nil {
		return x.StudentNum
	}
	return 0
}

type NullResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NullResp) Reset() {
	*x = NullResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_class_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NullResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NullResp) ProtoMessage() {}

func (x *NullResp) ProtoReflect() protoreflect.Message {
	mi := &file_class_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NullResp.ProtoReflect.Descriptor instead.
func (*NullResp) Descriptor() ([]byte, []int) {
	return file_class_proto_rawDescGZIP(), []int{11}
}

var File_class_proto protoreflect.FileDescriptor

var file_class_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x22, 0x17, 0x0a, 0x05, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x18, 0x0a,
	0x06, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x11, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x0b, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xaf, 0x01, 0x0a, 0x19, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x72, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x72, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x09, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x67, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x09, 0x47,
	0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x35,
	0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x20, 0x0a, 0x08, 0x4f, 0x72, 0x67, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x79, 0x4f, 0x72, 0x67, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0x49, 0x0a, 0x0d, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x22, 0x0a, 0x0a, 0x08, 0x4e,
	0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x32, 0xf2, 0x03, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x32, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x79, 0x49, 0x64, 0x12, 0x0c, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4f,
	0x72, 0x67, 0x49, 0x64, 0x12, 0x0f, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x4f, 0x72, 0x67,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x79, 0x4f, 0x72, 0x67, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a,
	0x10, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x61, 0x64, 0x65, 0x42, 0x79, 0x4f, 0x72, 0x67, 0x49,
	0x64, 0x12, 0x0f, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x4f, 0x72, 0x67, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x14, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47,
	0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74,
	0x47, 0x72, 0x61, 0x64, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x12, 0x0d, 0x2e, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x2e, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2f, 0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x64, 0x47, 0x72, 0x61, 0x64, 0x65, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x0c, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x10, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x47, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x39, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x14, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a,
	0x1f, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x42, 0x79, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x18, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x65, 0x61, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x42, 0x07, 0x5a, 0x05,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_class_proto_rawDescOnce sync.Once
	file_class_proto_rawDescData = file_class_proto_rawDesc
)

func file_class_proto_rawDescGZIP() []byte {
	file_class_proto_rawDescOnce.Do(func() {
		file_class_proto_rawDescData = protoimpl.X.CompressGZIP(file_class_proto_rawDescData)
	})
	return file_class_proto_rawDescData
}

var file_class_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_class_proto_goTypes = []interface{}{
	(*IdReq)(nil),                     // 0: class.IdReq
	(*IdsReq)(nil),                    // 1: class.IdsReq
	(*ClassSubjectIdReq)(nil),         // 2: class.ClassSubjectIdReq
	(*FullNameReq)(nil),               // 3: class.FullNameReq
	(*ClassSubjectTeachInfoResp)(nil), // 4: class.ClassSubjectTeachInfoResp
	(*ClassInfo)(nil),                 // 5: class.ClassInfo
	(*GradeInfo)(nil),                 // 6: class.GradeInfo
	(*ListGradeResp)(nil),             // 7: class.ListGradeResp
	(*OrgIdReq)(nil),                  // 8: class.OrgIdReq
	(*ListByOrgIdResp)(nil),           // 9: class.ListByOrgIdResp
	(*StudentNumReq)(nil),             // 10: class.StudentNumReq
	(*NullResp)(nil),                  // 11: class.NullResp
}
var file_class_proto_depIdxs = []int32{
	6,  // 0: class.ListGradeResp.list:type_name -> class.GradeInfo
	5,  // 1: class.ListByOrgIdResp.list:type_name -> class.ClassInfo
	0,  // 2: class.class.GetClassInfoById:input_type -> class.IdReq
	3,  // 3: class.class.GetClassInfoByFullName:input_type -> class.FullNameReq
	8,  // 4: class.class.ListByOrgId:input_type -> class.OrgIdReq
	8,  // 5: class.class.ListGradeByOrgId:input_type -> class.OrgIdReq
	1,  // 6: class.class.ListGradesWithId:input_type -> class.IdsReq
	0,  // 7: class.class.FindGradeById:input_type -> class.IdReq
	10, // 8: class.class.ChangeStudentNum:input_type -> class.StudentNumReq
	2,  // 9: class.class.GetTeacherByClassIdAndSubjectId:input_type -> class.ClassSubjectIdReq
	5,  // 10: class.class.GetClassInfoById:output_type -> class.ClassInfo
	5,  // 11: class.class.GetClassInfoByFullName:output_type -> class.ClassInfo
	9,  // 12: class.class.ListByOrgId:output_type -> class.ListByOrgIdResp
	7,  // 13: class.class.ListGradeByOrgId:output_type -> class.ListGradeResp
	7,  // 14: class.class.ListGradesWithId:output_type -> class.ListGradeResp
	6,  // 15: class.class.FindGradeById:output_type -> class.GradeInfo
	11, // 16: class.class.ChangeStudentNum:output_type -> class.NullResp
	4,  // 17: class.class.GetTeacherByClassIdAndSubjectId:output_type -> class.ClassSubjectTeachInfoResp
	10, // [10:18] is the sub-list for method output_type
	2,  // [2:10] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_class_proto_init() }
func file_class_proto_init() {
	if File_class_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_class_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_class_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_class_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClassSubjectIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_class_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_class_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClassSubjectTeachInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_class_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClassInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_class_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GradeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_class_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGradeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_class_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_class_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListByOrgIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_class_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentNumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_class_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NullResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_class_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_class_proto_goTypes,
		DependencyIndexes: file_class_proto_depIdxs,
		MessageInfos:      file_class_proto_msgTypes,
	}.Build()
	File_class_proto = out.File
	file_class_proto_rawDesc = nil
	file_class_proto_goTypes = nil
	file_class_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ClassClient is the client API for Class service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClassClient interface {
	// 获取班级信息详情
	GetClassInfoById(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*ClassInfo, error)
	// 根据班级名称获取班级信息
	GetClassInfoByFullName(ctx context.Context, in *FullNameReq, opts ...grpc.CallOption) (*ClassInfo, error)
	// 获取机构下的班级列表
	ListByOrgId(ctx context.Context, in *OrgIdReq, opts ...grpc.CallOption) (*ListByOrgIdResp, error)
	// 获取机构下的学段列表
	ListGradeByOrgId(ctx context.Context, in *OrgIdReq, opts ...grpc.CallOption) (*ListGradeResp, error)
	// 获取学段列表
	ListGradesWithId(ctx context.Context, in *IdsReq, opts ...grpc.CallOption) (*ListGradeResp, error)
	// 获取学段信息
	FindGradeById(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*GradeInfo, error)
	// 改变班级人数
	ChangeStudentNum(ctx context.Context, in *StudentNumReq, opts ...grpc.CallOption) (*NullResp, error)
	// 根据班级Id,学科Id获取任课关系
	GetTeacherByClassIdAndSubjectId(ctx context.Context, in *ClassSubjectIdReq, opts ...grpc.CallOption) (*ClassSubjectTeachInfoResp, error)
}

type classClient struct {
	cc grpc.ClientConnInterface
}

func NewClassClient(cc grpc.ClientConnInterface) ClassClient {
	return &classClient{cc}
}

func (c *classClient) GetClassInfoById(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*ClassInfo, error) {
	out := new(ClassInfo)
	err := c.cc.Invoke(ctx, "/class.class/GetClassInfoById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *classClient) GetClassInfoByFullName(ctx context.Context, in *FullNameReq, opts ...grpc.CallOption) (*ClassInfo, error) {
	out := new(ClassInfo)
	err := c.cc.Invoke(ctx, "/class.class/GetClassInfoByFullName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *classClient) ListByOrgId(ctx context.Context, in *OrgIdReq, opts ...grpc.CallOption) (*ListByOrgIdResp, error) {
	out := new(ListByOrgIdResp)
	err := c.cc.Invoke(ctx, "/class.class/ListByOrgId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *classClient) ListGradeByOrgId(ctx context.Context, in *OrgIdReq, opts ...grpc.CallOption) (*ListGradeResp, error) {
	out := new(ListGradeResp)
	err := c.cc.Invoke(ctx, "/class.class/ListGradeByOrgId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *classClient) ListGradesWithId(ctx context.Context, in *IdsReq, opts ...grpc.CallOption) (*ListGradeResp, error) {
	out := new(ListGradeResp)
	err := c.cc.Invoke(ctx, "/class.class/ListGradesWithId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *classClient) FindGradeById(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*GradeInfo, error) {
	out := new(GradeInfo)
	err := c.cc.Invoke(ctx, "/class.class/FindGradeById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *classClient) ChangeStudentNum(ctx context.Context, in *StudentNumReq, opts ...grpc.CallOption) (*NullResp, error) {
	out := new(NullResp)
	err := c.cc.Invoke(ctx, "/class.class/ChangeStudentNum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *classClient) GetTeacherByClassIdAndSubjectId(ctx context.Context, in *ClassSubjectIdReq, opts ...grpc.CallOption) (*ClassSubjectTeachInfoResp, error) {
	out := new(ClassSubjectTeachInfoResp)
	err := c.cc.Invoke(ctx, "/class.class/GetTeacherByClassIdAndSubjectId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClassServer is the server API for Class service.
type ClassServer interface {
	// 获取班级信息详情
	GetClassInfoById(context.Context, *IdReq) (*ClassInfo, error)
	// 根据班级名称获取班级信息
	GetClassInfoByFullName(context.Context, *FullNameReq) (*ClassInfo, error)
	// 获取机构下的班级列表
	ListByOrgId(context.Context, *OrgIdReq) (*ListByOrgIdResp, error)
	// 获取机构下的学段列表
	ListGradeByOrgId(context.Context, *OrgIdReq) (*ListGradeResp, error)
	// 获取学段列表
	ListGradesWithId(context.Context, *IdsReq) (*ListGradeResp, error)
	// 获取学段信息
	FindGradeById(context.Context, *IdReq) (*GradeInfo, error)
	// 改变班级人数
	ChangeStudentNum(context.Context, *StudentNumReq) (*NullResp, error)
	// 根据班级Id,学科Id获取任课关系
	GetTeacherByClassIdAndSubjectId(context.Context, *ClassSubjectIdReq) (*ClassSubjectTeachInfoResp, error)
}

// UnimplementedClassServer can be embedded to have forward compatible implementations.
type UnimplementedClassServer struct {
}

func (*UnimplementedClassServer) GetClassInfoById(context.Context, *IdReq) (*ClassInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetClassInfoById not implemented")
}
func (*UnimplementedClassServer) GetClassInfoByFullName(context.Context, *FullNameReq) (*ClassInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetClassInfoByFullName not implemented")
}
func (*UnimplementedClassServer) ListByOrgId(context.Context, *OrgIdReq) (*ListByOrgIdResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListByOrgId not implemented")
}
func (*UnimplementedClassServer) ListGradeByOrgId(context.Context, *OrgIdReq) (*ListGradeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGradeByOrgId not implemented")
}
func (*UnimplementedClassServer) ListGradesWithId(context.Context, *IdsReq) (*ListGradeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGradesWithId not implemented")
}
func (*UnimplementedClassServer) FindGradeById(context.Context, *IdReq) (*GradeInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindGradeById not implemented")
}
func (*UnimplementedClassServer) ChangeStudentNum(context.Context, *StudentNumReq) (*NullResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeStudentNum not implemented")
}
func (*UnimplementedClassServer) GetTeacherByClassIdAndSubjectId(context.Context, *ClassSubjectIdReq) (*ClassSubjectTeachInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTeacherByClassIdAndSubjectId not implemented")
}

func RegisterClassServer(s *grpc.Server, srv ClassServer) {
	s.RegisterService(&_Class_serviceDesc, srv)
}

func _Class_GetClassInfoById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClassServer).GetClassInfoById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/class.class/GetClassInfoById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClassServer).GetClassInfoById(ctx, req.(*IdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Class_GetClassInfoByFullName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FullNameReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClassServer).GetClassInfoByFullName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/class.class/GetClassInfoByFullName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClassServer).GetClassInfoByFullName(ctx, req.(*FullNameReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Class_ListByOrgId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrgIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClassServer).ListByOrgId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/class.class/ListByOrgId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClassServer).ListByOrgId(ctx, req.(*OrgIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Class_ListGradeByOrgId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrgIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClassServer).ListGradeByOrgId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/class.class/ListGradeByOrgId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClassServer).ListGradeByOrgId(ctx, req.(*OrgIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Class_ListGradesWithId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClassServer).ListGradesWithId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/class.class/ListGradesWithId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClassServer).ListGradesWithId(ctx, req.(*IdsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Class_FindGradeById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClassServer).FindGradeById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/class.class/FindGradeById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClassServer).FindGradeById(ctx, req.(*IdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Class_ChangeStudentNum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StudentNumReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClassServer).ChangeStudentNum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/class.class/ChangeStudentNum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClassServer).ChangeStudentNum(ctx, req.(*StudentNumReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Class_GetTeacherByClassIdAndSubjectId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClassSubjectIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClassServer).GetTeacherByClassIdAndSubjectId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/class.class/GetTeacherByClassIdAndSubjectId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClassServer).GetTeacherByClassIdAndSubjectId(ctx, req.(*ClassSubjectIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Class_serviceDesc = grpc.ServiceDesc{
	ServiceName: "class.class",
	HandlerType: (*ClassServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetClassInfoById",
			Handler:    _Class_GetClassInfoById_Handler,
		},
		{
			MethodName: "GetClassInfoByFullName",
			Handler:    _Class_GetClassInfoByFullName_Handler,
		},
		{
			MethodName: "ListByOrgId",
			Handler:    _Class_ListByOrgId_Handler,
		},
		{
			MethodName: "ListGradeByOrgId",
			Handler:    _Class_ListGradeByOrgId_Handler,
		},
		{
			MethodName: "ListGradesWithId",
			Handler:    _Class_ListGradesWithId_Handler,
		},
		{
			MethodName: "FindGradeById",
			Handler:    _Class_FindGradeById_Handler,
		},
		{
			MethodName: "ChangeStudentNum",
			Handler:    _Class_ChangeStudentNum_Handler,
		},
		{
			MethodName: "GetTeacherByClassIdAndSubjectId",
			Handler:    _Class_GetTeacherByClassIdAndSubjectId_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "class.proto",
}
