// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	"demacia/datacenter/class/api/internal/svc"

	"gitlab.u-jy.cn/xiaoyang/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/class/getStageList",
				Handler: stagesListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/class/addStage",
				Handler: addStageHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/class/edit-stage-by-id",
				Handler: editStageHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/class/del-stage-by-id",
				Handler: deleteStageHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/class/grades-by-stage-id",
				Handler: gradesByStageIdHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/class/grades-by-org-id",
				Handler: gradesByOrgIdHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/class/addGrade",
				Handler: addGradeHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/class/update-grade-by-id",
				Handler: updateGradeByIdHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/class/delete-grade-by-id",
				Handler: deleteGradeByIdHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/class/class-completion",
				Handler: classCompletionHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/class/classes-by-grade-id",
				Handler: classesByGradeIdHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/class/class-list-by-org-id",
				Handler: classListByOrgIdHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/class/add-class-by-grade-id",
				Handler: addClassHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/class/batch-add-class-by-grade-id",
				Handler: batchAddClassHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/class/update-class-by-grade-id",
				Handler: updateClassHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/class/delete-class-by-id",
				Handler: deleteClassHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/class/get-class-by-id",
				Handler: getClassByIdHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/class/get-class-tree",
				Handler: treeClassHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/class/list-teach",
				Handler: teachListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/class/add-teach",
				Handler: addTeachHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/class/update-teach",
				Handler: updateTeachHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/class/delete-teach",
				Handler: deleteTeachHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)
}
