// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package userclient

import (
	"context"

	"demacia/datacenter/user/rpc/user"

	"gitlab.u-jy.cn/xiaoyang/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	UserInfo    = user.UserInfo
	UserNameReq = user.UserNameReq

	User interface {
		FindOneByUserName(ctx context.Context, in *UserNameReq, opts ...grpc.CallOption) (*UserInfo, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) FindOneByUserName(ctx context.Context, in *UserNameReq, opts ...grpc.CallOption) (*UserInfo, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.FindOneByUserName(ctx, in, opts...)
}
