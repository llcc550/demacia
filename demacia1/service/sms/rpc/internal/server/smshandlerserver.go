// Code generated by goctl. DO NOT EDIT!
// Source: sms.proto

package server

import (
	"context"

	"demacia/service/sms/rpc/internal/logic"
	"demacia/service/sms/rpc/internal/svc"
	"demacia/service/sms/rpc/sms"
)

type SmsHandlerServer struct {
	svcCtx *svc.ServiceContext
}

func NewSmsHandlerServer(svcCtx *svc.ServiceContext) *SmsHandlerServer {
	return &SmsHandlerServer{
		svcCtx: svcCtx,
	}
}

func (s *SmsHandlerServer) MultiSend(ctx context.Context, in *sms.MultiSendRequest) (*sms.SmsSendResponse, error) {
	l := logic.NewMultiSendLogic(ctx, s.svcCtx)
	return l.MultiSend(in)
}

func (s *SmsHandlerServer) Send(ctx context.Context, in *sms.SendRequest) (*sms.SmsSendResponse, error) {
	l := logic.NewSendLogic(ctx, s.svcCtx)
	return l.Send(in)
}

func (s *SmsHandlerServer) Push(ctx context.Context, in *sms.RmqData) (*sms.Null, error) {
	l := logic.NewPushLogic(ctx, s.svcCtx)
	return l.Push(in)
}
