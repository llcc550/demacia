// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.17.3
// source: position.proto

package position

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ClassIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassId int64 `protobuf:"varint,1,opt,name=ClassId,proto3" json:"ClassId,omitempty"`
}

func (x *ClassIdReq) Reset() {
	*x = ClassIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_position_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClassIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassIdReq) ProtoMessage() {}

func (x *ClassIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_position_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassIdReq.ProtoReflect.Descriptor instead.
func (*ClassIdReq) Descriptor() ([]byte, []int) {
	return file_position_proto_rawDescGZIP(), []int{0}
}

func (x *ClassIdReq) GetClassId() int64 {
	if x != nil {
		return x.ClassId
	}
	return 0
}

type IdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IdReq) Reset() {
	*x = IdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_position_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdReq) ProtoMessage() {}

func (x *IdReq) ProtoReflect() protoreflect.Message {
	mi := &file_position_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdReq.ProtoReflect.Descriptor instead.
func (*IdReq) Descriptor() ([]byte, []int) {
	return file_position_proto_rawDescGZIP(), []int{1}
}

func (x *IdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PositionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	PositionName string `protobuf:"bytes,2,opt,name=PositionName,proto3" json:"PositionName,omitempty"`
}

func (x *PositionInfo) Reset() {
	*x = PositionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_position_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionInfo) ProtoMessage() {}

func (x *PositionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_position_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionInfo.ProtoReflect.Descriptor instead.
func (*PositionInfo) Descriptor() ([]byte, []int) {
	return file_position_proto_rawDescGZIP(), []int{2}
}

func (x *PositionInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PositionInfo) GetPositionName() string {
	if x != nil {
		return x.PositionName
	}
	return ""
}

var File_position_proto protoreflect.FileDescriptor

var file_position_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x26, 0x0a, 0x0a, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x49, 0x64, 0x22, 0x17, 0x0a, 0x05, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x42, 0x0a, 0x0c, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x32,
	0x7e, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0d, 0x46,
	0x69, 0x6e, 0x64, 0x42, 0x79, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x14, 0x2e, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x08, 0x46, 0x69,
	0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x0f, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x0a, 0x5a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_position_proto_rawDescOnce sync.Once
	file_position_proto_rawDescData = file_position_proto_rawDesc
)

func file_position_proto_rawDescGZIP() []byte {
	file_position_proto_rawDescOnce.Do(func() {
		file_position_proto_rawDescData = protoimpl.X.CompressGZIP(file_position_proto_rawDescData)
	})
	return file_position_proto_rawDescData
}

var file_position_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_position_proto_goTypes = []interface{}{
	(*ClassIdReq)(nil),   // 0: position.ClassIdReq
	(*IdReq)(nil),        // 1: position.IdReq
	(*PositionInfo)(nil), // 2: position.PositionInfo
}
var file_position_proto_depIdxs = []int32{
	0, // 0: position.position.FindByClassId:input_type -> position.ClassIdReq
	1, // 1: position.position.FindById:input_type -> position.IdReq
	2, // 2: position.position.FindByClassId:output_type -> position.PositionInfo
	2, // 3: position.position.FindById:output_type -> position.PositionInfo
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_position_proto_init() }
func file_position_proto_init() {
	if File_position_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_position_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClassIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_position_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_position_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_position_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_position_proto_goTypes,
		DependencyIndexes: file_position_proto_depIdxs,
		MessageInfos:      file_position_proto_msgTypes,
	}.Build()
	File_position_proto = out.File
	file_position_proto_rawDesc = nil
	file_position_proto_goTypes = nil
	file_position_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PositionClient is the client API for Position service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PositionClient interface {
	FindByClassId(ctx context.Context, in *ClassIdReq, opts ...grpc.CallOption) (*PositionInfo, error)
	FindById(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*PositionInfo, error)
}

type positionClient struct {
	cc grpc.ClientConnInterface
}

func NewPositionClient(cc grpc.ClientConnInterface) PositionClient {
	return &positionClient{cc}
}

func (c *positionClient) FindByClassId(ctx context.Context, in *ClassIdReq, opts ...grpc.CallOption) (*PositionInfo, error) {
	out := new(PositionInfo)
	err := c.cc.Invoke(ctx, "/position.position/FindByClassId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *positionClient) FindById(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*PositionInfo, error) {
	out := new(PositionInfo)
	err := c.cc.Invoke(ctx, "/position.position/FindById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PositionServer is the server API for Position service.
type PositionServer interface {
	FindByClassId(context.Context, *ClassIdReq) (*PositionInfo, error)
	FindById(context.Context, *IdReq) (*PositionInfo, error)
}

// UnimplementedPositionServer can be embedded to have forward compatible implementations.
type UnimplementedPositionServer struct {
}

func (*UnimplementedPositionServer) FindByClassId(context.Context, *ClassIdReq) (*PositionInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindByClassId not implemented")
}
func (*UnimplementedPositionServer) FindById(context.Context, *IdReq) (*PositionInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindById not implemented")
}

func RegisterPositionServer(s *grpc.Server, srv PositionServer) {
	s.RegisterService(&_Position_serviceDesc, srv)
}

func _Position_FindByClassId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClassIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PositionServer).FindByClassId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/position.position/FindByClassId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PositionServer).FindByClassId(ctx, req.(*ClassIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Position_FindById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PositionServer).FindById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/position.position/FindById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PositionServer).FindById(ctx, req.(*IdReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Position_serviceDesc = grpc.ServiceDesc{
	ServiceName: "position.position",
	HandlerType: (*PositionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindByClassId",
			Handler:    _Position_FindByClassId_Handler,
		},
		{
			MethodName: "FindById",
			Handler:    _Position_FindById_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "position.proto",
}
