// Code generated by goctl. DO NOT EDIT.
package types

type CategoryInsertReq struct {
	CategoryName string `json:"category_name"`
}

type CategoryUpdateReq struct {
	CategoryId   int64  `json:"category_id"`
	CategoryName string `json:"category_name"`
}

type CategoryIdReq struct {
	CategoryId int64 `json:"category_id"`
}

type CategoryListReq struct {
	CategoryName string `json:"category_name"`
}

type CategoryList struct {
	CategoryId   int64  `json:"category_id"`
	CategoryName string `json:"category_name"`
}

type CategoryListResponse struct {
	List []*CategoryList `json:"list"`
}

type EventInsertReq struct {
	EventId      int64   `json:"event_id,optional"`
	EventName    string  `json:"event_name"`
	EventContent string  `json:"event_content"`
	CategoryId   int64   `json:"category_id"`
	PushType     int8    `json:"push_type"`
	StartTime    int64   `json:"start_time"`
	EndTime      int64   `json:"end_time"`
	PositionIds  []int64 `json:"position_ids"`
}

type EventIdReq struct {
	EventId int64 `json:"event_id"`
}

type EventDetail struct {
	EventId      int64       `json:"event_id"`
	EventName    string      `json:"event_name"`
	EventContent string      `json:"event_content"`
	CategoryId   int64       `json:"category_id"`
	CategoryName string      `json:"category_name"`
	PushType     int8        `json:"push_type"`
	StartTime    int64       `json:"start_time"`
	EndTime      int64       `json:"end_time"`
	CreatedAt    int64       `json:"created_at"`
	MemberId     int64       `json:"member_id"`
	MemberName   string      `json:"member_name"`
	Position     []*Position `json:"position"`
}

type Position struct {
	PositionId    int64  `json:"position_id"`
	PositionTitle string `json:"position_title"`
}

type ListReq struct {
	EventName   string  `json:"event_name,optional"`
	MemberName  string  `json:"member_name,optional"`
	StartTime   int64   `json:"start_time,optional"`
	EndTime     int64   `json:"end_time,optional"`
	PositionIds []int64 `json:"position_ids,optional"`
	CategoryId  int64   `json:"category_id,optional"`
	Page        int     `json:"page"`
	Limit       int     `json:"limit"`
}

type ListResponse struct {
	List  []*EventDetail `json:"list"`
	Count int            `json:"count"`
}
